openapi: 3.0.0
servers:
  - description: TrashArt API
    url: https://backend-bw6dhamona-et.a.run.app/
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/LANGARIRANO/capstone/1.0.0
info:
  description: This is a TrashArt API
  version: "1.0.0"
  title: TrashArt API
security:
  - bearerAuth: []
tags:
  - name: users
    description: Operations available to regular users
paths:
  /user/register:
    post:
      tags:
        - users
      summary: Register a new user
      operationId: registerUser
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/register"
      responses:
        "201":
          description: User created
        "400":
          description: "Please fill all fields or failed to create user"
        "422":
          description: password and confirm password does not match
        "409":
          description: Email already exists

  # /user/verify:
  #   post:
  #     tags:
  #       - users
  #     summary: Verify user
  #     operationId: verifyUser
  #     description: Verify user
  #     parameters:
  #       - name: email
  #         in: query
  #         description: email
  #         required: true
  #         schema:
  #           type: string
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/verify'
  #     responses:
  #       '200':
  #         description: User verified
  #       '400':
  #         description: 'Please fill all fields, Wrong otp, or failed to verify user'
  #       '401':
  #         description: Invalid credentials
  #       '404':
  #         description: user does not exist

  /user/login:
    post:
      tags:
        - users
      summary: Login a user
      operationId: loginUser
      description: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: User logged in
        "400":
          description: "Please fill all fields, or user already exists"
        "401":
          description: Invalid credentials
        "404":
          description: email does not exist or user is not verified

  /user/predict:
    # post file emage
    post:
      tags:
        - users
      summary: Predict image
      operationId: predictImage
      description: Predict image
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UserPredict"
      responses:
        "200":
          description: Predicted image
        "401":
          description: Unautorizhed

  /user/addproduct:
    # post file emage
    post:
      tags:
        - users
      summary: add product
      operationId: addProduct
      description: add product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Addproduct"
      responses:
        "200":
          description: product added succesfully
        "401":
          description: Unautorizhed

  /user/history:
    get:
      tags:
        - users
      summary: get history
      operationId: get history
      description: get history
      security:
        - bearerAuth: []
      responses:
        "200":
          description: history
        "401":
          description: Unautorizhed

components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Addproduct:
      type: object
      required:
        - category
        - name
        - img
        - steps
      properties:
        category:
          type: string
          format: text
          example: gelas/botol kaca
        name:
          type: string
          format: text
          example: Vas Bunga
        img:
          type: string
          format: text
          example: https://asset-a.grid.id/crop/0x0:0x0/360x240/photo/cewekbangetfoto/original/3081_diy-cara-membuat-vas-bunga-dari-botol-bekas-dan-masking-tape.jpg
        steps:
          type: string
          format: text
          example: Cara membuat kerajinan dari botol bekas ini membutuhkan bahan-bahan lain seperti selotip dan cat warna (dipilih berdasarkan selera). Mulanya, berikan selotip ke botol sesuai bentuk dan motif yang Anda inginkan. Kemudian, pulas dengan cat dan tunggu hingga mengering. Begitu tak ada lagi bagian yang basah, lepaskan selotip dari badan botol. Jadilah vas bunga yang Anda inginkan! Nah bila bingung untuk mewarnainya, dibiarkan polos juga tetap cantik kok!

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: example@example.com
        password:
          type: string
          format: password
          example: password123

    register:
      type: object
      required:
        - username
        - email
        - password
        - confirmPassword
      properties:
        username:
          type: string
          example: test user
        email:
          type: string
          format: email
          example: example@example.com
        password:
          type: string
          format: password
          example: password123
        confirmPassword:
          type: string
          format: password
          example: password123

    # verify:
    #   type: object
    #   required:
    #     - otp
    #   properties:
    #     otp:
    #       type: string
    #       format: number
    #       example: 123456

    UserPredict:
      type: object
      required:
        - imgFile
      properties:
        imgFile:
          type: string
          format: binary
          example: image.jpg
